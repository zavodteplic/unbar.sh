upstream docker-registry {
    server registry:5000;
}

map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    '' 'registry/2.0';
}

server {
    listen 80;
    listen 443 ssl;
    server_name [DOMAIN_REP] www.[DOMAIN_REP];

    # Настройка SSL
    ssl_certificate /etc/letsencrypt/live/[DOMAIN_REP]/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/[DOMAIN_REP]/privkey.pem;
    ssl_stapling on;
    ssl_buffer_size 8k;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    add_header Strict-Transport-Security 'max-age=604800';

    # Настройки для загрузки образов Docker
    client_max_body_size 0;
    chunked_transfer_encoding on;

    # Замена стандартных страниц ошибок Nginx
    include /etc/nginx/errand/errand.inc;

    # Настройка логирования
    error_log /var/log/nginx/[DOMAIN_REP]/error.log warn;
    access_log /var/log/nginx/[DOMAIN_REP]/access.log;

    # Редирект с www и http
    if ($server_port = 80) { set $https_redirect 1; }
    if ($host ~ '^www\.') { set $https_redirect 1; }
    if ($https_redirect = 1) { return 301 https://$host$request_uri; }

    # Путь по которому certbot сможет проверить сервер на подлинность
    location /.well-known/acme-challenge/ { root /var/www/certbot; }

    # Редирект на версию DockerRegistry v2
    location / { return 301 https://$host/v2/; }

    # Прокси для DockerRegistry v2
    location /v2/ {
      # Запретить соединения из докера 1.5 и ниже
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }

      # Базовая аутенфикация
      # auth_basic "Registry realm";
      # auth_basic_user_file /etc/nginx/conf.d/nginx.htpasswd;

      # Добавляем заголовок если нужно
      add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

      proxy_pass                          http://docker-registry;
      proxy_set_header  Host              $http_host;
      proxy_set_header  X-Real-IP         $remote_addr;
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_read_timeout                  900;
    }
}
